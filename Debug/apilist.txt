kernel32.dll void WINAPI DeleteCriticalSection(LPCRITICAL_SECTION lp)
kernel32.dll void WINAPI LeaveCriticalSection(LPCRITICAL_SECTION lp)  
kernel32.dll void WINAPI EnterCriticalSection(LPCRITICAL_SECTION lp)
kernel32.dll BOOL WINAPI VirtualFree(LPVOID lpAddress,SIZE_T dwSize,DWORD dwFreeType);
kernel32.dll HLOCAL WINAPI LocalFree(HLOCAL hMem)
kernel32.dll DWORD WINAPI GetCurrentThreadId()   
kernel32.dll VOID WINAPI GetStartupInfoW(LPSTARTUPINFO lp)
kernel32.dll LPTSTR WINAPI GetCommandLineW()  
kernel32.dll BOOL WINAPI FreeLibrary(HMODULE hModule)  
kernel32.dll VOID WINAPI ExitProcess(UINT uExitCode)  
kernel32.dll BOOL WINAPI WriteFile(HANDLE hFile,LPCVOID lpBuffer,DWORD toWrite,LPDWORD written,LPOVERLAPPED overlap)  
kernel32.dll LONG WINAPI UnhandledExceptionFilter(struct _EXCEPTION_POINTERS* ExceptionInfo) 
kernel32.dll void WINAPI RtlUnwind(PVOID TargetFrame,PVOID targetIp,PEXCEPTION_RECORD ExceptionRecord,PVOID ReturnValue)
kernel32.dll void WINAPI RaiseException(DWORD dwExceptionCode,DWORD dwExceptionFlags,DWORD nNumberofArgs,const ULONG_PTR* lpArgs) 
kernel32.dll HANDLE WINAPI GetStdHandle(DWORD nStdHandle) 
user32.dll   int WINAPI GetKeyboardType(int nTypeFlag)  
user32.dll   int WINAPI MessageBoxW(HWND hWnd,LPCTSTR lpText,LPCTSTR lpCaption, UINT uType)  
advapi32.dll LONG WINAPI RegQueryValueExW(HKEY hkey,LPCTSTR lpValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,LPDWORD lpcbData)
advapi32.dll LONG WINAPI RegOpenKeyExW(HKEY hkey,LPCTSTR lpSubKey,DWORD ulOptions,REGSAM samDesired,PHKEY phkResult)
advapi32.dll LONG WINAPI RegCloseKey(HKEY hkey)
kernel32.dll BOOL WINAPI TlsSetValue(DWORD dwTlsIdx,LPVOID lpTlsVal) 
kernel32.dll LPVOID WINAPI TlsGetValue(DWORD dwTlsIdx)
kernel32.dll BOOL TlsFree(DWORD dwTlsIdx) 
kernel32.dll DWORD WINAPI TlsAlloc() 
kernel32.dll HLOCAL WINAPI LocalAlloc(UINT uFlags,SIZE_T uBytes)
wsock32.dll  int closesocket(SOCKET s)
wsock32.dll  int WSACleanup()
wsock32.dll  int recv(SOCKET s,char* buf,int len,int flags)
wsock32.dll  int send(SOCKET s,const char* buf,int len,int flags) 
wsock32.dll  int connect(SOCKET s,const struct sockaddr* name,int namelen)
wsock32.dll  SOCKET WSAAPI socket(int af,int type,int protocol)
wsock32.dll  int WSAStartup(WORD wVersionRequested,LPWSADATA lpWSAData)
wsock32.dll  struct hostent* FAR gethostbyname(const char* name)  
advapi32.dll LONG WINAPI RegSetValueExW(HKEY hKey,LPCTSTR lpValueName,DWORD reserved,DWORD dwType,const BYTE* lpData,DWORD cbData)
advapi32.dll LONG WINAPI RegCreateKeyW(HKEY hKey,LPCTSTR lpSubkey,PHKEY phkResult) 
advapi32.dll BOOL WINAPI AdjustTokenPrivileges(HANDLE tokenHandle,BOOL disAllPriv,PTOKEN_PRIVILEGES newstate,DWORD bufferlength,PTOKEN_PRIVILEGES ps,PDWORD returnLengh) 
advapi32.dll BOOL WINAPI LookupPrivilegeValueW(LPCTSTR lpSystemName,LPCTSTR lpName,PLUID lpLuid)
advapi32.dll BOOL WINAPI OpenProcessToken(HANDLE PrHandle,DWORD DesiredAccess,PHANDLE tokenHandle) 
user32.dll   HWND WINAPI GetForegroundWindow() 
user32.dll   int wvsprintfW(LPTSTR lpOutput,LPCTSTR lpFmt,va_list arglist) 
kernel32.dll BOOL WINAPI CloseHandle(HANDLE hObject)
kernel32.dll void RtlMoveMemory(PVOID Destination,const VOID* Source,SIZE_T Length)
kernel32.dll void RtlZeroMemory(PVOID dest,SIZE_T length)
kernel32.dll BOOL WINAPI WriteProcessMemory(HANDLE hProcess,LPVOID lpBaseAddress,LPCVOID lpBuffer,SIZE_T nSize,SIZE_T* lpNumberOfBytesWritten)
kernel32.dll BOOL WINAPI ReadProcessMemory(HANDLE hProcess,LPCVOID lpBaseAddress,LPVOID lpBuffer,SIZE_T nSize,SIZE_T* lpNumberOfBytesRead) 
kernel32.dll BOOL WINAPI VirtualProtect(LPVOID lpAddress,SIZE_T dwSize,DWORD flNewProtect,PDWORD lpflOldProtect) 
kernel32.dll VOID WINAPI Sleep(DWORD dwMilis)  
kernel32.dll DWORD WINAPI GetTickCount() 
kernel32.dll BOOL WINAPI MoveFileExW(LPCTSTR lpExistingFileName,LPCTSTR lpNewFileName,DWORD dwFlags)
kernel32.dll BOOL WINAPI ReadFile(HANDLE hFile,LPVOID lpBuffer,DWORD nNumberOfBytesToRead,LPDWORD lpNumberOfBytesRead,LPOVERLAPPED lpOverlapped) 
kernel32.dll DWORD WINAPI SetFilePointer(HANDLE hFile,LONG lDistanceToMove,PLONG lpDistanceToMoveHigh,DWORD dwMoveMethod)
kernel32.dll BOOL WINAPI FindClose(HANDLE hFile)
kernel32.dll HANDLE WINAPI FindFirstFileW(LPCTSTR lpFileName,LPWIN32_FIND_DATA lpFindFileData)
kernel32.dll BOOL WINAPI DeleteFileW(LPCTSTR lpFileName)
kernel32.dll HANDLE WINAPI CreateFileW(LPCTSTR lpFileName,DWORD dwDesiredAccess,DWORD dwShareMode,LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD dwCreationDisposition,DWORD dwFlagsAndAttributes,HANDLE hTemplateFile)
kernel32.dll UINT WINAPI GetPrivateProfileIntW(LPCTSTR lpAppName,LPCTSTR lpKeyName,INT nDefault,LPCTSTR lpFileName)
kernel32.dll DWORD WINAPI GetPrivateProfileStringW(LPCTSTR lpAppName,LPCTSTR lpKeyName,LPCTSTR lpDefault,LPTSTR lpReturnedString,DWORD nSize,LPCTSTR lpFileName) 
kernel32.dll BOOL WINAPI WritePrivateProfileStringW(LPCTSTR lpAppName,LPCTSTR lpKeyName,LPCTSTR lpString,LPCTSTR lpFileName)
kernel32.dll BOOL WINAPI SetFileAttributesW(LPCTSTR lpFileName,DWORD dwFileAttributes)
kernel32.dll DWORD WINAPI GetCurrentProcessId()
kernel32.dll HANDLE WINAPI GetCurrentProcess()
kernel32.dll BOOL WINAPI Process32Next(HANDLE hSnapshot,LPPROCESSENTRY32 lppe)
kernel32.dll BOOL WINAPI Process32First(HANDLE hSnapshot,LPPROCESSENTRY32 lppe)
kernel32.dll BOOL WINAPI Module32Next(HANDLE hSnapshot,LPMODULEENTRY32 lpme)
kernel32.dll BOOL WINAPI Module32First(HANDLE hSnapshot,LPMODULEENTRY32 lpme)
kernel32.dll HANDLE WINAPI CreateToolhelp32Snapshot(DWORD dwFlags,DWORD th32ProcessID)
kernel32.dll UINT WINAPI WinExec(LPCSTR lpCmdLine,UINT uCmdShow)
kernel32.dll LPTSTR WINAPI lstrcpyW(LPTSTR lpString1,LPTSTR lpString2)
kernel32.dll LPTSTR WINAPI lstrcatW(LPTSTR lpString1,LPTSTR lpString2)
kernel32.dll int WINAPI lstrcmpiW(LPCTSTR lpString1,LPCTSTR lpString2)
kernel32.dll int WINAPI lstrcmpW(LPCTSTR lpString1,LPCTSTR lpString2)
kernel32.dll int WINAPI lstrlenW(LPCTSTR lpString)
kernel32.dll BOOL WINAPI TerminateThread(HANDLE hThread,DWORD dwExitCode)               
kernel32.dll BOOL WINAPI TerminateProcess(HANDLE hProcess,UINT uExitCode)              
kernel32.dll HANDLE WINAPI OpenProcess(DWORD dwDesiredAccess,BOOL bInheritHandle,DWORD dwProcessId)
kernel32.dll UINT WINAPI GetWindowsDirectoryW(LPTSTR lpBuffer,UINT uSize)
kernel32.dll UINT WINAPI GetSystemDirectoryW(LPTSTR lpBuffer,UINT uSize) 
kernel32.dll HMODULE WINAPI GetModuleHandleW(LPCTSTR lpModuleName)
kernel32.dll BOOL WINAPI GetComputerNameW(LPTSTR lpBuffer,LPDWORD lpnSize)
kernel32.dll HANDLE WINAPI CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes,SIZE_T dwStackSize,LPTHREAD_START_ROUTINE lpStartAddress,LPVOID lpParameter,DWORD dwCreationFlags,LPDWORD lpThreadId)  
user32.dll   BOOL WINAPI UnhookWindowsHookEx(HHOOK hhk)
user32.dll   HHOOK WINAPI SetWindowsHookExW(int idHook,HOOKPROC lpfn,HINSTANCE hMod,DWORD dwThreadId)  
user32.dll   DWORD WINAPI GetWindowThreadProcessId(HWND hWnd,LPDWORD lpdwProcessId)  
user32.dll   int WINAPI GetWindowTextW(HWND hWnd,LPTSTR lpString,int nMaxCount)
user32.dll   int WINAPI GetClassNameW(HWND hWnd,LPTSTR lpClassName,int nMaxCount)
user32.dll   LRESULT WINAPI CallNextHookEx(HHOOK hhk,int nCode,WPARAM wParam,LPARAM lParam)